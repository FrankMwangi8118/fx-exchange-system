2025-05-14 09:49:27 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 09:49:27 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 67974 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 09:49:27 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 09:49:41 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2025-05-14 09:49:41 [main] INFO  c.A.r.RateServiceApplication - Started RateServiceApplication in 19.608 seconds (process running for 22.71)
2025-05-14 09:49:48 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 09:49:48 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 09:49:49 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 09:49:49 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 09:49:49 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 09:49:50 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 09:49:50 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 09:59:46 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [94eb8bd4-8, L:/192.168.1.197:43930 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 09:59:46 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:416)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 10:02:18 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: adacd368-0cbd-4989-b9d9-4d201df027e7 Method: GET URI:http://localhost:8080/api/v1/rateService | Req Body: [No Body] | Status: 200 OK | Duration: 184ms | Res Body: 
2025-05-14 10:09:34 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 9d1639a3-204d-4f70-abd9-daad4536f329 Method: GET URI:http://localhost:8080/api/v1/mainService | Req Body: [No Body] | Status: 200 OK | Duration: 29ms | Res Body: 
2025-05-14 10:09:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 10:09:42 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 0def635c-9e0d-4177-8018-8ae4804cd171 Method: POST URI:http://localhost:8080/api/v1/mainService | Req Body: [No Body] | Status: 200 OK | Duration: 2ms | Res Body: 
2025-05-14 10:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 10:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 10:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 10:09:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 10:09:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 10:09:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 10:09:45 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 40df015f-4516-4784-8ab9-af2980db4b5d Method: POST URI:http://localhost:8080/api/v1/mainService | Req Body: [No Body] | Status: 200 OK | Duration: 2ms | Res Body: 
2025-05-14 10:10:13 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 8e745ce7-89ea-4321-8aea-a359025658f3 Method: GET URI:http://localhost:8080/api/v1/mainService | Req Body: [No Body] | Status: 200 OK | Duration: 3ms | Res Body: 
2025-05-14 10:10:27 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 10:10:27 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 10:10:29 [reactor-http-epoll-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 10:10:29 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 96c687eb-1e82-4342-b887-970fad4d3b8f Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 1164ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 10:11:01 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 10:11:01 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 10:11:01 [reactor-http-epoll-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 10:11:01 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 523f4ef4-91dd-4765-9158-8fa001947c46 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 15ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 10:19:41 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [245a0aea-8, L:/192.168.1.197:56566 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 10:19:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 10:29:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 10:29:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 10:29:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 10:29:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 10:29:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 10:29:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 10:29:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 10:39:41 [reactor-http-epoll-2] WARN  r.n.http.client.HttpClientConnect - [97f455d3-8, L:/192.168.1.197:39542 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 10:39:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 10:45:23 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 661dec52-2773-483c-a4ad-a360edce8505 Method: GET URI:http://localhost:8080/swagger-ui/index.html | Req Body: [No Body] | Status: 200 OK | Duration: 135ms | Res Body: 
2025-05-14 10:47:25 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 10:47:25 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 10:47:27 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 0ae7dd39-290b-4a8f-9c9d-9b4aac455eda Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=UMB&to=QUZ | Req Body: [No Body] | Status: 422 UNPROCESSABLE_ENTITY | Duration: 1881ms | Res Body: {"responseMessage":"WebClient error: 422 Unprocessable Entity from GET https://api.freecurrencyapi.com/v1/latest","responseCode":422,"path":"/api/v1/rateService/rate"}
2025-05-14 10:48:00 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 10:48:00 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 10:48:00 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{CAD=1.3930302733}
2025-05-14 10:48:00 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 72544812-f0f1-430c-a47f-c0b6c2898afe Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=USD&to=CAD | Req Body: [No Body] | Status: 200 OK | Duration: 388ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"CAD","from":"USD","rate":1.3930302733}}
2025-05-14 10:48:38 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: aa943d52-3f37-4161-9a28-cb362fbd92b1 Method: GET URI:http://localhost:8080/v3/api-docs/swagger-config | Req Body: [No Body] | Status: 200 OK | Duration: 251ms | Res Body: {"configUrl":"/v3/api-docs/swagger-config","oauth2RedirectUrl":"http://localhost:8080/webjars/swagger-ui/oauth2-redirect.html","url":"/v3/api-docs","validatorUrl":""}
2025-05-14 10:48:39 [reactor-http-epoll-2] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: e315e20c-f24f-45ad-b881-c6463eb5641a Method: GET URI:http://localhost:8080/webjars/swagger-ui/favicon-16x16.png | Req Body: [No Body] | Status: 200 OK | Duration: 483ms | Res Body: ï¿½PNG

   IHDR         (-S  5PLTEbï¿½4aï¿½4^ï¿½5[ï¿½5Wï¿½7Uï¿½7Rï¿½8Qï¿½8/^@.]@-ZA+WA3f>4f?9o=%NC$MC$OC&MB$KB#LB!IC$KB$LB$MB%MB$NC%NCAD?ECDCDDD EC"IC"IC#JB'SA$LC&PA"GB"HC)VA+Y?$MA%MB6F4D2G3D5F1B1I+@ $I 3M 33      ï¿½ï¿½-ï¿½ï¿½,ï¿½ï¿½,ï¿½ï¿½-ï¿½ï¿½,ï¿½.ï¿½ï¿½.}ï¿½.|ï¿½.vï¿½0tï¿½0rï¿½1qï¿½1pï¿½1oï¿½2mï¿½1mï¿½1lï¿½2kï¿½2jï¿½2iï¿½3hï¿½3hï¿½3gï¿½3Kï¿½9Jï¿½:Jï¿½:D;C<@y=>w=9n>8m>8n?6j?5h?3e?=E>E?E=ECEDD FD`%/   ;tRNSï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½L1$
 ï¿½ï¿½   ï¿½IDATxï¿½=ï¿½ï¿½.CQï¿½ï¿½ï¿½nï¿½ï¿½Riï¿½"ï¿½ï¿½1ï¿½sÖ»[ï¿½ï¿½Aï¿½5ï¿½;uï¿½ï¿½ï¿½ï¿½Zï¿½Nï¿½ï¿½ï¿½ï¿½ï¿½^k.ï¿½IvL-ï¿½[Æ¬wï¿½KP:Nï¿½ï¿½ï¿½ac0Nï¿½ihï¿½ï¿½ï¿½ï¿½ï¿½ï¿½$ï¿½7ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Tï¿½}kï¿½ï¿½Iï¿½ï¿½ï¿½@Ð§\ï¿½ï¿½ï¿½ï¿½T. ï¿½ï¿½Iï¿½qï¿½Ë¯ï¿½ï¿½ï¿½ï¿½ï¿½l OEï¿½ï¿½"Aï¿½ï¿½Cï¿½ï¿½bmWï¿½lBË­p[ï¿½ï¿½ï¿½ï¿½ï¿½Eï¿½1ï¿½ï¿½ï¿½ï¿½ï¿½(ï¿½IK6pï¿½ï¿½ï¿½Å•#ï¿½8ke6ï¿½ï¿½êŸ©ï¿½ï¿½ï¿½J9ï¿½ï¿½ï¿½ï¿½    IENDï¿½B`ï¿½
2025-05-14 10:48:41 [reactor-http-epoll-1] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2491 ms
2025-05-14 10:48:41 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: c3479d2d-e386-4f8b-9b4e-8051b2f73f05 Method: GET URI:http://localhost:8080/v3/api-docs | Req Body: [No Body] | Status: 200 OK | Duration: 3065ms | Res Body: {"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Currency Conversion","description":"API for converting currencies and fetching rates"}],"paths":{"/api/v1/rateService/status":{"get":{"tags":["Currency Conversion"],"summary":"gets the status of the service","description":"checks the availability of the server","operationId":"status","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/v1/rateService/rate":{"get":{"tags":["Currency Conversion"],"summary":"Get exchange rate","description":"Fetches the current exchange rate between two currencies using query parameters.","operationId":"convert","parameters":[{"name":"from","in":"query","description":"The base currency code (e.g., USD)","required":true,"schema":{"type":"string"},"example":"USD"},{"name":"to","in":"query","description":"The target currency code (e.g., EUR)","required":true,"schema":{"type":"string"},"example":"EUR"}],"responses":{"200":{"description":"Successful retrieval of exchange rate","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}},"400":{"description":"Invalid currency codes provided (e.g, validation error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"404":{"description":"Exchange rate not found for the given currencies","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"401":{"description":"Invalid api credentials  (i.e, security error....wrong api key / api passphrase)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"503":{"description":"External exchange rate service unavailable (timeout, connection error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}}}}}},"components":{"schemas":{"ApiResponse":{"type":"object","properties":{"responseCode":{"type":"integer","format":"int32"},"responseStatus":{"type":"string"},"responseMessage":{"type":"string"},"data":{"type":"object"}}},"CustomExceptionDto":{"type":"object","properties":{"responseMessage":{"type":"string"},"responseCode":{"type":"integer","format":"int32"},"path":{"type":"string"}}}}}}
2025-05-14 10:48:50 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 43a43add-b67f-4f4d-a52e-e5374106966a Method: GET URI:http://localhost:8080/v3/api-docs | Req Body: [No Body] | Status: 200 OK | Duration: 11ms | Res Body: {"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Currency Conversion","description":"API for converting currencies and fetching rates"}],"paths":{"/api/v1/rateService/status":{"get":{"tags":["Currency Conversion"],"summary":"gets the status of the service","description":"checks the availability of the server","operationId":"status","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/v1/rateService/rate":{"get":{"tags":["Currency Conversion"],"summary":"Get exchange rate","description":"Fetches the current exchange rate between two currencies using query parameters.","operationId":"convert","parameters":[{"name":"from","in":"query","description":"The base currency code (e.g., USD)","required":true,"schema":{"type":"string"},"example":"USD"},{"name":"to","in":"query","description":"The target currency code (e.g., EUR)","required":true,"schema":{"type":"string"},"example":"EUR"}],"responses":{"200":{"description":"Successful retrieval of exchange rate","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}},"400":{"description":"Invalid currency codes provided (e.g, validation error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"404":{"description":"Exchange rate not found for the given currencies","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"401":{"description":"Invalid api credentials  (i.e, security error....wrong api key / api passphrase)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"503":{"description":"External exchange rate service unavailable (timeout, connection error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}}}}}},"components":{"schemas":{"ApiResponse":{"type":"object","properties":{"responseCode":{"type":"integer","format":"int32"},"responseStatus":{"type":"string"},"responseMessage":{"type":"string"},"data":{"type":"object"}}},"CustomExceptionDto":{"type":"object","properties":{"responseMessage":{"type":"string"},"responseCode":{"type":"integer","format":"int32"},"path":{"type":"string"}}}}}}
2025-05-14 10:48:52 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 4e7b0bc2-103f-4461-97e5-1f1758274219 Method: GET URI:http://localhost:8080/v3/api-docs | Req Body: [No Body] | Status: 200 OK | Duration: 30ms | Res Body: {"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Currency Conversion","description":"API for converting currencies and fetching rates"}],"paths":{"/api/v1/rateService/status":{"get":{"tags":["Currency Conversion"],"summary":"gets the status of the service","description":"checks the availability of the server","operationId":"status","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/v1/rateService/rate":{"get":{"tags":["Currency Conversion"],"summary":"Get exchange rate","description":"Fetches the current exchange rate between two currencies using query parameters.","operationId":"convert","parameters":[{"name":"from","in":"query","description":"The base currency code (e.g., USD)","required":true,"schema":{"type":"string"},"example":"USD"},{"name":"to","in":"query","description":"The target currency code (e.g., EUR)","required":true,"schema":{"type":"string"},"example":"EUR"}],"responses":{"200":{"description":"Successful retrieval of exchange rate","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}},"400":{"description":"Invalid currency codes provided (e.g, validation error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"404":{"description":"Exchange rate not found for the given currencies","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"401":{"description":"Invalid api credentials  (i.e, security error....wrong api key / api passphrase)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"503":{"description":"External exchange rate service unavailable (timeout, connection error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}}}}}},"components":{"schemas":{"ApiResponse":{"type":"object","properties":{"responseCode":{"type":"integer","format":"int32"},"responseStatus":{"type":"string"},"responseMessage":{"type":"string"},"data":{"type":"object"}}},"CustomExceptionDto":{"type":"object","properties":{"responseMessage":{"type":"string"},"responseCode":{"type":"integer","format":"int32"},"path":{"type":"string"}}}}}}
2025-05-14 10:49:00 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 661dddc9-5dca-4bd0-8ae2-448ed575ae5c Method: GET URI:http://localhost:8080/v3/api-docs | Req Body: [No Body] | Status: 200 OK | Duration: 19ms | Res Body: {"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Currency Conversion","description":"API for converting currencies and fetching rates"}],"paths":{"/api/v1/rateService/status":{"get":{"tags":["Currency Conversion"],"summary":"gets the status of the service","description":"checks the availability of the server","operationId":"status","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}}}},"/api/v1/rateService/rate":{"get":{"tags":["Currency Conversion"],"summary":"Get exchange rate","description":"Fetches the current exchange rate between two currencies using query parameters.","operationId":"convert","parameters":[{"name":"from","in":"query","description":"The base currency code (e.g., USD)","required":true,"schema":{"type":"string"},"example":"USD"},{"name":"to","in":"query","description":"The target currency code (e.g., EUR)","required":true,"schema":{"type":"string"},"example":"EUR"}],"responses":{"200":{"description":"Successful retrieval of exchange rate","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}},"400":{"description":"Invalid currency codes provided (e.g, validation error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"404":{"description":"Exchange rate not found for the given currencies","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"401":{"description":"Invalid api credentials  (i.e, security error....wrong api key / api passphrase)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"503":{"description":"External exchange rate service unavailable (timeout, connection error)","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CustomExceptionDto"}}}}}}}},"components":{"schemas":{"ApiResponse":{"type":"object","properties":{"responseCode":{"type":"integer","format":"int32"},"responseStatus":{"type":"string"},"responseMessage":{"type":"string"},"data":{"type":"object"}}},"CustomExceptionDto":{"type":"object","properties":{"responseMessage":{"type":"string"},"responseCode":{"type":"integer","format":"int32"},"path":{"type":"string"}}}}}}
2025-05-14 10:49:00 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 043d4105-2c48-41b8-b57e-cf1ea64fad68 Method: GET URI:http://localhost:8080/favicon.ico | Req Body: [No Body] | Status: 200 OK | Duration: 21ms | Res Body: 
2025-05-14 10:49:41 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 10:49:41 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 10:49:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 10:49:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 10:49:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 10:49:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 10:49:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 10:59:46 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [35594977-10, L:/192.168.1.197:37530 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 10:59:46 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:416)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 11:01:41 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:01:41 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 163832 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:01:41 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:01:53 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-05-14 11:01:55 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:01:55 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-05-14 11:06:27 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:06:28 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 169731 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:06:28 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:06:40 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-05-14 11:06:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:06:42 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-05-14 11:09:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 11:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 11:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 11:09:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 11:09:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 11:09:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 11:09:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 11:09:48 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:09:48 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 173147 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:09:48 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:10:07 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-05-14 11:10:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:10:09 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-05-14 11:12:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:12:57 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 176067 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:12:57 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:13:11 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-05-14 11:13:13 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:13:13 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-05-14 11:14:19 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:14:19 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 177299 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:14:19 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:14:29 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start reactive web server
2025-05-14 11:14:29 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:14:29 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'server.port' to java.lang.Integer:

    Property: server.port
    Value: "${SERVER_PORT}"
    Origin: class path resource [application.yml] - 2:10
    Reason: failed to convert java.lang.String to java.lang.Integer (caused by java.lang.NumberFormatException: For input string: "${SERVER_PORT}")

Action:

Update your application's configuration

2025-05-14 11:15:55 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:15:55 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 179001 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:15:55 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:16:05 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start reactive web server
2025-05-14 11:16:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-14 11:16:06 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'server.port' to java.lang.Integer:

    Property: server.port
    Value: "${SERVER_PORT}"
    Origin: class path resource [application.yml] - 2:10
    Reason: failed to convert java.lang.String to java.lang.Integer (caused by java.lang.NumberFormatException: For input string: "${SERVER_PORT}")

Action:

Update your application's configuration

2025-05-14 11:19:41 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [567cd6e4-7, L:/192.168.1.180:50172 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:19:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:20:56 [reactor-http-epoll-2] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 11:20:56 [reactor-http-epoll-2] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 11:20:57 [reactor-http-epoll-1] WARN  r.n.http.client.HttpClientConnect - [3445e957-2, L:/192.168.1.180:50180 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:20:57 [reactor-http-epoll-2] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 8806d2c0-411f-4b03-89e5-8dfbd0221bc4 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 500 INTERNAL_SERVER_ERROR | Duration: 185ms | Res Body: {"responseMessage":"An unexpected error occurred: recvAddress(..) failed: Connection reset by peer","responseCode":500,"path":"/api/v1/rateService/rate"}
2025-05-14 11:22:44 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:22:45 [main] INFO  c.A.r.RateServiceApplication - Starting RateServiceApplication using Java 17.0.13 with PID 185256 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/rate-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:22:45 [main] INFO  c.A.r.RateServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:22:53 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8082
2025-05-14 11:22:53 [main] INFO  c.A.r.RateServiceApplication - Started RateServiceApplication in 10.9 seconds (process running for 12.795)
2025-05-14 11:22:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 11:22:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 11:22:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 11:22:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 11:22:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 11:22:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 11:23:00 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 11:23:03 [reactor-http-epoll-2] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 11:23:03 [reactor-http-epoll-2] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 11:23:03 [reactor-http-epoll-2] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{USD=0.7178594889}
2025-05-14 11:23:03 [reactor-http-epoll-2] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 6de5250b-0676-4f88-83dd-7d812bd71382 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 622ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 11:29:41 [reactor-http-epoll-2] WARN  r.n.http.client.HttpClientConnect - [ae267511-2, L:/192.168.1.180:49528 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:29:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:30:57 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:30:57 [main] INFO  c.A.m.MainServiceApplication - Starting MainServiceApplication using Java 17.0.13 with PID 194949 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/main-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:30:57 [main] INFO  c.A.m.MainServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:31:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-14 11:31:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 607 ms. Found 1 JDBC repository interface.
2025-05-14 11:31:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-14 11:31:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6dd79214
2025-05-14 11:31:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-14 11:31:12 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8081
2025-05-14 11:31:12 [main] INFO  c.A.m.MainServiceApplication - Started MainServiceApplication in 19.202 seconds (process running for 21.292)
2025-05-14 11:32:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-14 11:32:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-14 11:32:53 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [2e4dcb0d-8, L:/192.168.1.180:60652 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:32:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:33:05 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:33:05 [main] INFO  c.A.m.MainServiceApplication - Starting MainServiceApplication using Java 17.0.13 with PID 197204 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/main-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:33:05 [main] INFO  c.A.m.MainServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:33:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-14 11:33:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 642 ms. Found 1 JDBC repository interface.
2025-05-14 11:33:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-14 11:33:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16f7f59f
2025-05-14 11:33:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-14 11:33:18 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8081
2025-05-14 11:33:19 [main] INFO  c.A.m.MainServiceApplication - Started MainServiceApplication in 16.909 seconds (process running for 19.155)
2025-05-14 11:33:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-14 11:33:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-14 11:36:09 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:36:09 [main] INFO  c.A.m.MainServiceApplication - Starting MainServiceApplication using Java 17.0.13 with PID 200813 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/main-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:36:09 [main] INFO  c.A.m.MainServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:36:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-14 11:36:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 932 ms. Found 1 JDBC repository interface.
2025-05-14 11:36:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-14 11:36:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@123307c4
2025-05-14 11:36:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-14 11:36:25 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8081
2025-05-14 11:36:25 [main] INFO  c.A.m.MainServiceApplication - Started MainServiceApplication in 18.446 seconds (process running for 20.613)
2025-05-14 11:38:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-14 11:38:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-14 11:38:29 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-05-14 11:38:29 [main] INFO  c.A.m.MainServiceApplication - Starting MainServiceApplication using Java 17.0.13 with PID 203152 (/home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system/main-service/target/classes started by mwas in /home/mwas/SPRINGBOOT-PROJECTS/Microservices/fx-exchange-system)
2025-05-14 11:38:29 [main] INFO  c.A.m.MainServiceApplication - The following 1 profile is active: "dev"
2025-05-14 11:38:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-14 11:38:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 658 ms. Found 1 JDBC repository interface.
2025-05-14 11:38:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-14 11:38:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e0ad709
2025-05-14 11:38:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-14 11:38:51 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8081
2025-05-14 11:38:51 [main] INFO  c.A.m.MainServiceApplication - Started MainServiceApplication in 26.261 seconds (process running for 28.638)
2025-05-14 11:39:41 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 11:39:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 11:39:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 11:39:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 11:39:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 11:39:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 11:39:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 11:42:54 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 11:42:54 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 11:42:54 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 11:42:55 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 11:42:55 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 11:42:55 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 11:42:56 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 11:45:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-14 11:45:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-14 11:49:41 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [d78b800c-5, L:/192.168.1.180:51592 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:49:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:52:53 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [f9768331-7, L:/192.168.1.180:48412 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:52:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:59:41 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [5cac6db5-4, L:/192.168.1.180:51598 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 11:59:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:02:48 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 12:02:48 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 12:02:49 [reactor-http-epoll-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{USD=0.7178594889}
2025-05-14 12:02:49 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 5e546cf0-7aa9-4b0c-9593-08219c612502 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 977ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 12:02:53 [reactor-http-epoll-1] WARN  r.n.http.client.HttpClientConnect - [eb88afe2-2, L:/192.168.1.180:48418 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:02:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:09:41 [reactor-http-epoll-1] WARN  r.n.http.client.HttpClientConnect - [b187a218-2, L:/192.168.1.180:38628 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:09:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:12:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 12:12:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 12:12:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 12:12:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 12:12:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 12:13:00 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 12:13:00 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 12:19:42 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 12:19:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 12:19:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 12:19:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 12:19:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 12:19:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 12:19:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 12:21:58 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 12:21:58 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 12:21:58 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 12:21:58 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: c72350ec-a111-4543-8c2c-ab4d8f093611 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 193ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 12:22:53 [reactor-http-epoll-2] WARN  r.n.http.client.HttpClientConnect - [f8e76253-8, L:/192.168.1.180:56242 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:22:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:29:41 [reactor-http-epoll-2] WARN  r.n.http.client.HttpClientConnect - [595f1104-7, L:/192.168.1.180:56278 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:29:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 12:32:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 12:39:46 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [598725a1-2, L:/192.168.1.180:55560 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 12:39:46 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:416)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2025-05-14 12:42:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 12:49:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 12:52:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 12:59:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:02:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:09:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:12:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:19:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:22:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:29:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:32:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:39:41 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 13:42:53 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:172)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:488)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:436)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:583)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
		at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:375)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:110)
		at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:266)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
		at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
		at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
		at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
		at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
		at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
		at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
		at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
		at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
		at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
		at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
		at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
		at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
		at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
		at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
		at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
		at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
		at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
		at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Failed to resolve 'api.freecurrencyapi.com' [A(1)] and search domain query for configured domains failed as well: [.]
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1187)
	at io.netty.resolver.dns.DnsResolveContext.internalResolve(DnsResolveContext.java:384)
	at io.netty.resolver.dns.DnsResolveContext.doSearchDomainQuery(DnsResolveContext.java:310)
	at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:100)
	at io.netty.resolver.dns.DnsResolveContext$1.operationComplete(DnsResolveContext.java:262)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1133)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1072)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:444)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:651)
	at io.netty.resolver.dns.DnsResolveContext.access$500(DnsResolveContext.java:68)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:502)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:625)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:105)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:345)
	at io.netty.resolver.dns.DnsQueryContext.finishSuccess(DnsQueryContext.java:336)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1382)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.epoll.EpollDatagramChannel.processPacket(EpollDatagramChannel.java:662)
	at io.netty.channel.epoll.EpollDatagramChannel.recvmsg(EpollDatagramChannel.java:697)
	at io.netty.channel.epoll.EpollDatagramChannel.access$300(EpollDatagramChannel.java:56)
	at io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:536)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Empty label is not a legal name
	at java.base/java.net.IDN.toASCIIInternal(IDN.java:284)
	at java.base/java.net.IDN.toASCII(IDN.java:123)
	at java.base/java.net.IDN.toASCII(IDN.java:152)
	at io.netty.handler.codec.dns.AbstractDnsRecord.IDNtoASCII(AbstractDnsRecord.java:86)
	at io.netty.handler.codec.dns.AbstractDnsRecord.<init>(AbstractDnsRecord.java:72)
	at io.netty.handler.codec.dns.DefaultDnsQuestion.<init>(DefaultDnsQuestion.java:53)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:1183)
	... 47 common frames omitted
2025-05-14 14:27:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 14:27:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 14:27:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 14:27:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 14:27:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 14:27:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 14:27:47 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 14:30:57 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 14:30:57 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 14:30:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 14:30:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 14:30:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 14:30:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 14:30:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 14:35:41 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:35:41 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:35:41 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 14:35:42 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 3bbb320c-92e7-4d55-847b-38aba8d7f01c Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 674ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 14:35:59 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:35:59 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:35:59 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 14:35:59 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: b0bf5a48-1e27-4d20-bcf2-a32b17eb6ae8 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 69ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 14:36:02 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:36:02 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:36:02 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:USD:0.7178594889
2025-05-14 14:36:02 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 21bd977a-de71-4ab4-9401-1eaa32cb1b68 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=USD | Req Body: [No Body] | Status: 200 OK | Duration: 33ms | Res Body: {"responseCode":200,"responseStatus":"success","data":{"to":"USD","from":"CAD","rate":0.7178594889}}
2025-05-14 14:37:01 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:37:01 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:37:01 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:XAU:null
2025-05-14 14:37:01 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [7386d701-8, L:/192.168.1.197:42922 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 14:37:01 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: e3a41161-8ce9-4fe2-932c-db747d4f929a Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=XAU | Req Body: [No Body] | Status: 500 INTERNAL_SERVER_ERROR | Duration: 282ms | Res Body: {"responseMessage":"An unexpected error occurred: recvAddress(..) failed: Connection reset by peer","responseCode":500,"path":"/api/v1/rateService/rate"}
2025-05-14 14:37:25 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:37:25 [reactor-http-epoll-4] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:37:25 [reactor-http-epoll-4] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:XAU:null
2025-05-14 14:37:26 [reactor-http-epoll-4] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 21ad900c-b000-4c40-a19b-66b7f25a80d4 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=XAU | Req Body: [No Body] | Status: 422 UNPROCESSABLE_ENTITY | Duration: 1133ms | Res Body: {"responseMessage":"WebClient error: 422 Unprocessable Entity from GET https://api.freecurrencyapi.com/v1/latest","responseCode":422,"path":"/api/v1/rateService/rate"}
2025-05-14 14:37:43 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 14:37:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 14:37:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 14:37:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 14:37:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 14:37:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 14:37:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache rePut for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 14:40:56 [reactor-http-epoll-3] WARN  r.n.http.client.HttpClientConnect - [07f1f8d3-8, L:/192.168.1.197:56604 - R:api.freecurrencyapi.com/104.21.14.78:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 14:40:56 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 14:41:54 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:41:54 [reactor-http-epoll-1] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:41:54 [reactor-http-epoll-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache hit for:XAU:null
2025-05-14 14:41:54 [reactor-http-epoll-1] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 81ab0e4e-6d08-48d7-989b-fa2ba4d11c13 Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CAD&to=XAU | Req Body: [No Body] | Status: 422 UNPROCESSABLE_ENTITY | Duration: 479ms | Res Body: {"responseMessage":"WebClient error: 422 Unprocessable Entity from GET https://api.freecurrencyapi.com/v1/latest","responseCode":422,"path":"/api/v1/rateService/rate"}
2025-05-14 14:45:35 [reactor-http-epoll-3] INFO  c.A.r.filter.SecurityFilter - dat:frank :frank
2025-05-14 14:45:35 [reactor-http-epoll-3] INFO  c.A.r.filter.SecurityFilter - Request ID: null - API Key Auth SUCCESS for /api/v1/rateService/rate
2025-05-14 14:45:36 [reactor-http-epoll-3] INFO  c.A.r.f.RequestResponseLoggingFilter - ID: 5b31d920-475d-4d8d-83cd-169f34a6c05d Method: GET URI:http://localhost:8080/api/v1/rateService/rate?from=CADc&to=USD | Req Body: [No Body] | Status: 400 BAD_REQUEST | Duration: 595ms | Res Body: {"responseMessage":"from: 'from' must be exactly 3 letters | from:  'from' must contain exactly three uppercase letters ISO 4217","responseCode":400,"path":"/api/v1/rateService/rate"}
2025-05-14 14:47:43 [reactor-http-epoll-4] WARN  r.n.http.client.HttpClientConnect - [6e3d746c-10, L:/192.168.1.197:43316 - R:api.freecurrencyapi.com/172.67.202.166:443] The connection observed an error, the request cannot be retried as the headers/body were sent
io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 14:47:43 [scheduling-1] ERROR o.s.s.s.TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task
org.springframework.web.reactive.function.client.WebClientRequestException: recvAddress(..) failed: Connection reset by peer
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ Request to GET https://api.freecurrencyapi.com/v1/latest [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:873)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.handleReadException(AbstractEpollStreamChannel.java:728)
		at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:826)
		at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:509)
		at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:407)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103)
		at reactor.core.publisher.Mono.block(Mono.java:1712)
		at com.AnvilShieldGroup.rate_service.infrastructure.scheduler.SchedulerServiceImpl.preFetchMajorCurrenciesRates(SchedulerServiceImpl.java:37)
		at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:569)
		at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
		at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: io.netty.channel.unix.Errors$NativeIoException: recvAddress(..) failed: Connection reset by peer
2025-05-14 14:50:57 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 14:50:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 14:50:58 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 14:50:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 14:50:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 14:50:59 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 14:51:00 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
2025-05-14 14:57:44 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :USD rates:{AUD=1.544910166, BGN=1.7482202801, BRL=5.6104006625, CAD=1.3930302733, CHF=0.8394901052, CNY=7.2024107716, CZK=22.2398837062, DKK=6.6679908455, EUR=0.8939101759, GBP=0.7516401388, HKD=7.7948511441, HRK=6.3629706972, HUF=360.8209889551, IDR=16491.211726107, ILS=3.5657205743, INR=85.1905135917, ISK=130.1053195325, JPY=147.5500656321, KRW=1415.1742854749, MXN=19.4013219692, MYR=4.3203706044, NOK=10.3665717244, NZD=1.6844102015, PHP=55.7727257886, PLN=3.7787004042, RON=4.5616507349, RUB=79.86066435, SEK=9.7185118296, SGD=1.3011101967, THB=33.1816837272, TRY=38.7552173413, USD=1.0, ZAR=18.3020519169}
2025-05-14 14:57:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :EUR rates:{AUD=1.72826108, BGN=1.9557001668, BRL=6.2762465556, CAD=1.5583559857, CHF=0.9391213209, CNY=8.0571974297, CZK=24.8793271469, DKK=7.4593522093, EUR=1.0, GBP=0.8408452651, HKD=8.7199489996, HRK=7.1181320772, HUF=403.6434517504, IDR=18448.3991464841, ILS=3.9889025435, INR=95.3009775349, ISK=145.5463010045, JPY=165.061400586, KRW=1583.1280632308, MXN=21.7038831107, MYR=4.8331149157, NOK=11.5968830022, NZD=1.8843170678, PHP=62.3918681007, PLN=4.2271589541, RON=5.1030303244, RUB=89.3385784199, SEK=10.8719109499, SGD=1.4555267764, THB=37.1197069032, TRY=43.3547110058, USD=1.1186806314, ZAR=20.4741509945}
2025-05-14 14:57:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :JPY rates:{AUD=0.0104704133, BGN=0.0118483192, BRL=0.0380237083, CAD=0.0094410685, CHF=0.0056895272, CNY=0.0488133349, CZK=0.1507277114, DKK=0.0451913784, EUR=0.0060583516, GBP=0.0050941363, HKD=0.052828517, HRK=0.0431241468, HUF=2.4454139509, IDR=111.7668884487, ILS=0.0241661741, INR=0.5773668295, ISK=0.8817706653, JPY=1.0, KRW=9.5911464316, MXN=0.1314897549, MYR=0.0292807095, NOK=0.0702579947, NZD=0.0114158553, PHP=0.3779918738, PLN=0.0256096152, RON=0.0309159519, RUB=0.5412445193, SEK=0.0658658591, SGD=0.008818093, THB=0.2248842356, TRY=0.2626580827, USD=0.0067773606, ZAR=0.1240396054}
2025-05-14 14:57:45 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :GBP rates:{AUD=2.0553853982, BGN=2.3258740318, BRL=7.4642110937, CAD=1.85332076, CHF=1.1168776943, CNY=9.5822593816, CZK=29.5884726722, DKK=8.8712543427, EUR=1.1892794567, GBP=1.0, HKD=10.3704562087, HRK=8.4654482494, HUF=480.044864995, IDR=21940.3021137686, ILS=4.7439198497, INR=113.339494785, ISK=173.0952257821, JPY=196.3041328097, KRW=1882.7816829131, MXN=25.811982314, MYR=5.747924281, NOK=13.7919347162, NZD=2.2409795786, PHP=74.2013669968, PLN=5.0272733043, RON=6.0689291317, RUB=106.2485360049, SEK=12.9297403477, SGD=1.7310280938, THB=44.1457048584, TRY=51.56086715, USD=1.3304238935, ZAR=24.349487171}
2025-05-14 14:57:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CAD rates:{AUD=1.1090284221, BGN=1.2549765167, BRL=4.0274793521, CAD=1.0, CHF=0.6026359378, CNY=5.1703189153, CZK=15.9651115503, DKK=4.7866805003, EUR=0.641701902, GBP=0.5395720059, HKD=5.5956078583, HRK=4.5677188925, HUF=259.0187707122, IDR=11838.3728208866, ILS=2.559686349, INR=61.1548185452, ISK=93.3973381815, JPY=105.9202147004, KRW=1015.8962892619, MXN=13.9274230726, MYR=3.1014190339, NOK=7.4417418796, NZD=1.2091698463, PHP=40.0369804286, PLN=2.7125759408, RON=3.2746242651, RUB=57.3287356927, SEK=6.9765259348, SGD=0.9340143008, THB=23.8197865209, TRY=27.8208005125, USD=0.7178594889, ZAR=13.1383016347}
2025-05-14 14:57:46 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :CHF rates:{AUD=1.8402958611, BGN=2.0824787204, BRL=6.6831051703, CAD=1.6593766438, CHF=1.0, CNY=8.5795064492, CZK=26.4921332228, DKK=7.9429058237, EUR=1.0648251485, GBP=0.8953531842, HKD=9.2852209881, HRK=7.5795660458, HUF=429.8096984349, IDR=19644.3193599979, ILS=4.2474837431, INR=101.478877552, ISK=154.9813615748, JPY=175.7615303839, KRW=1685.7545749604, MXN=23.1108405555, MYR=5.1464223076, NOK=12.3486526645, NZD=2.0064682014, PHP=66.436430213, PLN=4.5011851608, RON=5.4338350228, RUB=95.1299650292, SEK=11.5766841913, SGD=1.5498815157, THB=39.525997414, TRY=46.1651865832, USD=1.1911992694, ZAR=21.8013908723}
2025-05-14 14:57:47 [scheduling-1] INFO  c.A.r.i.cache.CacheServiceImpl - cache put for currency :AUD rates:{AUD=1.0, BGN=1.1315999587, BRL=3.6315384454, CAD=0.9016901461, CHF=0.5433908868, CNY=4.6620256181, CZK=14.3955837664, DKK=4.3161026397, EUR=0.5786162818, GBP=0.4865267608, HKD=5.0455044673, HRK=4.1186671156, HUF=233.5546732075, IDR=10674.5441185135, ILS=2.308043958, INR=55.1426972691, ISK=84.2154595107, JPY=95.5072138687, KRW=916.0236734923, MXN=12.5582201452, MYR=2.7965189818, NOK=6.7101453227, NZD=1.0902965354, PHP=36.1009507323, PLN=2.4459029964, RON=2.952696432, RUB=51.6927560628, SEK=6.2906646894, SGD=0.8421914913, THB=21.4780667883, TRY=25.0857416788, USD=0.6472868274, ZAR=11.8466771206}
